"use strict";

//Область видимости js
// let x = 5;
// console.log(x);

// function one() {
//   let y = 10;
//   console.log(x);
//   console.log(y);
// }
// one();
// console.log(y);

// lexicalEnvironment - лексическое окружение
// scope - ссылка на lexicalEnvironment  родителя
// globalScope - объект window в браузере
// если не найдет переменную, то выдаст ошибку

// Лексическое окружение определяется во время вызова функции после передачи аргументов
// Scope - определяется во время создания функции, когда мы ее описываем

// Можно будет пересмотреть этот урок потом по области видимости и замыканиям

//Замыкания
// Замыкание - функция внутри функции; это функция со всеми ее переменными, которые ей доступны
//Если объявляем функцию внтури другой функции, то внутрення функция называется замыканием, т.к. эта функция сохраняет доступ к переменным внешней функции

function one() {
  let x = 10;
  function two(y) {
    return x + y;
  }

  function tree() {
    let y = 5;
    return x * y;
  }
  return two(15);
}
console.log(one());
